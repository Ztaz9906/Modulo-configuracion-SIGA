# Generated by Django 4.1.7 on 2023-05-07 00:19

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TbDavisos',
            fields=[
                ('id_aviso', models.AutoField(primary_key=True, serialize=False)),
                ('titulo', models.TextField(blank=True, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('activo', models.BooleanField(blank=True, null=True)),
                ('fecha_registro', models.DateField(blank=True, null=True)),
                ('id_usuario_registro', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_davisos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDconfiguracionCobro',
            fields=[
                ('id_configuracion_cobro', models.AutoField(primary_key=True, serialize=False)),
                ('activo', models.BooleanField(blank=True, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_dconfiguracion_cobro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDconfiguracionElastic',
            fields=[
                ('id_configuracion_elastic', models.AutoField(primary_key=True, serialize=False)),
                ('ip', models.TextField(blank=True, null=True)),
                ('puerto', models.TextField(blank=True, null=True)),
                ('config_indice', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_dconfiguracion_elastic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDconfiguracionEventoAcceso',
            fields=[
                ('id_configuracion_evento_acceso', models.AutoField(primary_key=True, serialize=False)),
                ('activo', models.BooleanField(blank=True, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_dconfiguracion_evento_acceso',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDconfiguracionPersona',
            fields=[
                ('id_configuracion_persona', models.AutoField(primary_key=True, serialize=False)),
                ('activo', models.BooleanField(blank=True, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_dconfiguracion_persona',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDconfiguracionProceso',
            fields=[
                ('id_configuracion_proceso', models.AutoField(primary_key=True, serialize=False)),
                ('flujo', models.BooleanField(blank=True, null=True)),
                ('descripcion_configuracion_proceso', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_dconfiguracion_proceso',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDconfiguracionRabbitmq',
            fields=[
                ('id_configuracion_rabbitmq', models.AutoField(primary_key=True, serialize=False)),
                ('ip', models.TextField(blank=True, null=True)),
                ('puerto', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateTimeField(blank=True, null=True)),
                ('usuario', models.TextField(blank=True, null=True)),
                ('contrasena', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_dconfiguracion_rabbitmq',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDcron',
            fields=[
                ('id_cron', models.AutoField(primary_key=True, serialize=False)),
                ('scrip', models.TextField(blank=True, null=True)),
                ('frecuencia', models.IntegerField(blank=True, null=True)),
                ('ultima_actualizacion', models.DateTimeField(blank=True, null=True)),
                ('nombre', models.TextField(blank=True, null=True)),
                ('unidad_tiempo', models.TextField(blank=True, null=True)),
                ('activo', models.BooleanField(blank=True, null=True)),
                ('proxima_actualizacion', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_dcron',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDdatosContacto',
            fields=[
                ('id_datos_contacto', models.AutoField(primary_key=True, serialize=False)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('telefono', models.TextField(blank=True, null=True)),
                ('correo', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_ddatos_contacto',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDplanificacionMenu',
            fields=[
                ('id_planificacion_menu', models.AutoField(primary_key=True, serialize=False)),
                ('fecha', models.DateField(blank=True, null=True)),
                ('cantidad_reservaciones_desayuno', models.IntegerField(blank=True, null=True)),
                ('cantidad_por_configuracion_desayuno', models.IntegerField(blank=True, null=True)),
                ('planificacion_desayuno', models.IntegerField(blank=True, null=True)),
                ('cantidad_reservaciones_almuerzo', models.IntegerField(blank=True, null=True)),
                ('cantidad_por_configuracion_almuerzo', models.IntegerField(blank=True, null=True)),
                ('planificacion_almuerzo', models.IntegerField(blank=True, null=True)),
                ('cantidad_reservaciones_comida', models.IntegerField(blank=True, null=True)),
                ('cantidad_por_configuracion_comida', models.IntegerField(blank=True, null=True)),
                ('planificacion_comida', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_dplanificacion_menu',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDvaloresConfiguracionCobro',
            fields=[
                ('id_valores_configuracion_cobro', models.AutoField(primary_key=True, serialize=False)),
                ('id_tipo_cobro', models.IntegerField(blank=True, null=True)),
                ('precio', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'tb_dvalores_configuracion_cobro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDvaloresConfiguracionEventoAcceso',
            fields=[
                ('id_valores_configuracion_evento_acceso', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'tb_dvalores_configuracion_evento_acceso',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TbDvaloresConfiguracionPersona',
            fields=[
                ('id_calores_configuracion_persona', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'tb_dvalores_configuracion_persona',
                'managed': False,
            },
        ),
    ]
