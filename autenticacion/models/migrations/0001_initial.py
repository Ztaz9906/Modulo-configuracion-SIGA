# Generated by Django 4.2.5 on 2023-10-15 19:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Institucion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('description', models.TextField(blank=True, null=True)),
                ('active', models.BooleanField(blank=True, null=True)),
                ('active_modules', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('abastecimiento', 'Abastecimiento'), ('cajero', 'Cajero'), ('distribucion', 'Distribucion'), ('reservacion', 'Reservacion'), ('facturacion', 'Facturacion'), ('configuracion', 'Configuracion')], max_length=200), blank=True, default=list, size=None)),
            ],
            options={
                'verbose_name': 'Institucion',
                'verbose_name_plural': 'Instituciones',
            },
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfiles',
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.CharField(blank=True, max_length=255, null=True)),
                ('ci', models.CharField(blank=True, max_length=255, null=True)),
                ('solapin', models.CharField(blank=True, max_length=255, null=True)),
                ('codigo_solapin', models.CharField(blank=True, max_length=255, null=True)),
                ('nombre_responsabilidad', models.TextField(blank=True, null=True)),
                ('id_expediente', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Persona',
                'verbose_name_plural': 'Personas',
            },
        ),
        migrations.CreateModel(
            name='TbDconfiguracionPersona',
            fields=[
                ('id_configuracion_persona', models.AutoField(primary_key=True, serialize=False)),
                ('activo', models.BooleanField(blank=True, null=True)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Configuracion Personas',
                'db_table': 'tb_dconfiguracion_persona',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
            ],
            options={
                'verbose_name': 'Grupo',
                'verbose_name_plural': 'Grupos',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='TbDpersonaTorpedo',
            fields=[
                ('id_persona_torpedo', models.AutoField(primary_key=True, serialize=False)),
                ('nombre_completo', models.CharField(max_length=255)),
                ('ci', models.CharField(max_length=255)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('id_usuario_registro', models.IntegerField(blank=True, null=True)),
                ('fecha_registro', models.DateField(blank=True, null=True)),
                ('fecha_actualizacion', models.DateField(blank=True, null=True)),
                ('id_institucion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='autenticacion.institucion')),
            ],
            options={
                'verbose_name': 'Torpedo',
                'verbose_name_plural': 'Torpedos',
            },
        ),
    ]
